# -*- coding: utf-8 -*-
"""XGB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g8_wx-sUeRKennLWjMc0BOa6yjnA7Ddr
"""

!pip uninstall -y scikit-learn

!pip install scikit-learn==1.5

import pandas as pd
import sklearn
print(sklearn.__version__)

from sklearn.model_selection import train_test_split,cross_val_score
from sklearn.metrics import root_mean_squared_error,mean_squared_error, mean_absolute_error, r2_score
from xgboost import XGBRegressor
df=pd.read_csv('/content/vvv1cleaned_data.csv')
df.info()
X = df.drop(columns=['AQI'])
X = X.drop(columns=['From Date', 'To Date'], errors='ignore')
y = df['AQI']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
xgb_model=XGBRegressor(n_estimators=200, learning_rate=0.14, max_depth=4, random_state=42)



print("Performing 5-Fold Cross-Validation with the best model...")
cv_scores = cross_val_score(xgb_model, X, y, cv=5, scoring='neg_mean_squared_error')
cv_rmse = (-cv_scores.mean()) ** 0.5
print(f"Mean Cross-Validated RMSE: {cv_rmse}")

print("Training the XGBoost model with the best parameters...")
xgb_model.fit(X_train, y_train)

y_pred = xgb_model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
rmse = mse ** 0.5
r2 = r2_score(y_test, y_pred)

print("\nModel Evaluation Metrics:")
print(f"Root Mean Squared Error (RMSE): {rmse}")
print(f"Mean Squared Error (MSE): {mse}")
print(f"Mean Absolute Error (MAE): {mae}")
print(f"R-squared (R2 Score): {r2}")

plt.scatter(y_test, y_pred)
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red')  # Line of perfect prediction
plt.xlabel("Actual Values")
plt.ylabel("Predicted Values")
plt.title("Actual vs Predicted")
plt.show()